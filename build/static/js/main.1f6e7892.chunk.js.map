{"version":3,"sources":["helpers/languages.js","components/FormSections/FormInput.js","components/FormSections/EducationSection.js","components/FormSections/ExperienceSection.js","components/FormSections/InterestsSection.js","components/FormSections/PersonalDataSection.js","components/FormSections/SkillsSection.js","components/FilloutForm.js","components/CreatedCv.js","components/ControlButtons.js","helpers/exampledata.js","App.js","index.js"],"names":["personalSection","polish","name","enterYourName","secondName","enterYourSecondName","title","enterYourTitle","address","enterYourAddress","phone","enterYourPhone","email","enterYourEmail","description","enterDescription","photo","english","experienceSection","experience","position","enterPosition","company","enterCompany","city","enterCity","from","fromWhen","to","toWhen","educationSection","education","facility","enterFacility","degree","enterDegree","subject","enterSubject","enterFromWhen","enterToWhen","skillsSection","skills","enterSkill","interestsSection","interests","enterInterest","buttons","fillTheForm","addPosition","deletePosition","addSkill","deleteSkill","addInterest","deleteInterest","addEducation","deleteEducation","generatePDF","loadExample","clearAll","cvSections","profile","contact","FormInput","props","prompt","onChangeInput","value","className","htmlFor","type","placeholder","onChange","EducationSection","language","buttonNames","educations","formData","onDeleteUnit","onAddUnit","id","onClick","map","i","ExperienceSection","experiences","InterestsSection","interest","PersonalDataSection","personalData","onImageChange","SkillsSection","skill","FilloutForm","data","handleChange","deleteUnit","addUnit","CreatedCV","experienceData","educationData","skillsData","interestData","length","uniqid","ControlButtons","clearAllFields","exampledata","key","App","useState","image","setImage","setLanguage","setData","changeLanguage","event","preventDefault","target","dataset","handleImageChange","a","files","undefined","document","querySelector","remove","fr","FileReader","readAsDataURL","onload","e","imgElem","sideArea","createElement","classList","add","src","this","result","prepend","sectionName","closest","index","copiedObj","JSON","parse","stringify","push","unitIndex","splice","content","componentRef","handlePrint","ref","el","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1f6e7892.chunk.js","sourcesContent":["export const personalSection = {\n  polish: {\n    personalSection: \"Informacje Osobiste\",\n    name: \"Imię\",\n    enterYourName: \"Wpisz swoje imię\",\n    secondName: \"Nazwisko\",\n    enterYourSecondName: \"Wpisz swoje nazwisko\",\n    title: \"Tytuł\",\n    enterYourTitle: \"Wpisz swój tytuł\",\n    address: \"Adres\",\n    enterYourAddress: \"Wpisz swój adres\",\n    phone: \"Numer telefonu\",\n    enterYourPhone: \"Wpisz swój numer Telefonu\",\n    email: \"Adres e-mail\",\n    enterYourEmail: \"Wpisz swój adres email\",\n    description: \"Opis\",\n    enterDescription: \"Napisz coś o sobie\",\n    photo: \"Zdjęcie (opcjonalne)\",\n  },\n\n  english: {\n    personalSection: \"Personal Information\",\n    name: \"Name\",\n    enterYourName: \"Enter your name\",\n    secondName: \"Second Name\",\n    enterYourSecondName: \"Enter your second name\",\n    title: \"Title\",\n    enterYourTitle: \"Enter your title\",\n    address: \"Address\",\n    enterYourAddress: \"Enter your address\",\n    phone: \"Phone Number\",\n    enterYourPhone: \"Enter your phone number\",\n    email: \"E-mail address\",\n    enterYourEmail: \"Enter your e-mail address\",\n    description: \"Desription\",\n    enterDescription: \"Write something about yourself.\",\n    photo: \"Photo (optional)\",\n  },\n};\n\nexport const experienceSection = {\n  polish: {\n    experience: \"Doświadczenie\",\n    position: \"Pozycja\",\n    enterPosition: \"Wpisz stanowisko na którym pracowałeś\",\n    company: \"Firma\",\n    enterCompany: \"Wpisz nazwę firmy, w której pracowałeś\",\n    city: \"Miasto\",\n    enterCity: \"Wpisz miasto\",\n    from: \"Od\",\n    fromWhen: \"Wpisz datę rozpoczęcia\",\n    to: \"Do\",\n    toWhen: \"Wpisz datę zakończenia\",\n  },\n  english: {\n    experience: \"Experience\",\n    position: \"Position\",\n    enterPosition: \"Enter position at which you worked at\",\n    company: \"Company\",\n    enterCompany: \"Enter name of the company\",\n    city: \"City\",\n    enterCity: \"Enter the city\",\n    from: \"From\",\n    fromWhen: \"Enter start date\",\n    to: \"To\",\n    toWhen: \"Enter end date\",\n  },\n};\n\nexport const educationSection = {\n  polish: {\n    education: \"Edukacja\",\n    facility: \"Placówka\",\n    enterFacility: \"Wpisz miejsce nauki\",\n    city: \"Miasto\",\n    enterCity: \"Wpisz miasto\",\n    degree: \"Stopień naukowy\",\n    enterDegree: \"Wpisz stopień naukowy\",\n    subject: \"Kierunek kształcenia\",\n    enterSubject: \"Wpisz kierunek kształcenia\",\n    fromWhen: \"Od\",\n    enterFromWhen: \"Wpisz datę rozpoczęcia\",\n    toWhen: \"Do\",\n    enterToWhen: \"Wpisz datę zakończenia\",\n  },\n  english: {\n    education: \"Education\",\n    facility: \"Facility\",\n    enterFacility: \"Enter facility\",\n    city: \"City\",\n    enterCity: \"Enter city\",\n    degree: \"Degree\",\n    enterDegree: \"Enter your degree\",\n    subject: \"Subject\",\n    enterSubject: \"Enter the subject\",\n    fromWhen: \"From\",\n    enterFromWhen: \"Enter start date\",\n    toWhen: \"To\",\n    enterToWhen: \"Enter end date\",\n  },\n};\n\nexport const skillsSection = {\n  polish: {\n    skills: \"Umiejętności\",\n    enterSkill: \"Wpisz swoją umiejetność\",\n  },\n  english: {\n    skills: \"Skills\",\n    enterSkill: \"Enter your skill\",\n  },\n};\n\nexport const interestsSection = {\n  polish: {\n    interests: \"Zainteresowania\",\n    enterInterest: \"Wpisz zainteresowanie\",\n  },\n  english: {\n    interests: \"Interests\",\n    enterInterest: \"Enter your interest\",\n  },\n};\n\nexport const buttons = {\n  polish: {\n    fillTheForm: \"Wypełnij poniższe pola\",\n    addPosition: \"Dodaj pozycję\",\n    deletePosition: \"Usuń pozycję\",\n    addSkill: \"Dodaj umiejętność\",\n    deleteSkill: \"Usuń umiejętność\",\n    addInterest: \"Dodaj zainteresowanie\",\n    deleteInterest: \"Usuń zainteresowanie\",\n    addEducation: \"Dodaj edukację\",\n    deleteEducation: \"Usuń edukację\",\n    generatePDF: \"Wygeneruj plik PDF\",\n    loadExample: \"Wczytaj przykładowe dane\",\n    clearAll: \"Wyczyść wszystkie pola\",\n  },\n  english: {\n    fillTheForm: \"Fill the following fields\",\n    addPosition: \"Add position\",\n    deletePosition: \"Delete position\",\n    addSkill: \"Add skill\",\n    deleteSkill: \"Delete skill\",\n    addInterest: \"Add interest\",\n    deleteInterest: \"Delete interest\",\n    addEducation: \"Add Education\",\n    deleteEducation: \"Usuń edukację\",\n    generatePDF: \"Generate PDF File\",\n    loadExample: \"Load example data\",\n    clearAll: \"Clear all fields\",\n  },\n};\n\nexport const cvSections = {\n  polish: {\n    name: \"Imię\",\n    secondName: \"Nazwisko\",\n    title: \"Tytuł\",\n    profile: \"Profil\",\n    experience: \"Doświadczenie\",\n    education: \"Edukacja\",\n    skills: \"Umiejętności\",\n    interests: \"Zainteresowania\",\n    contact: \"Kontakt\",\n  },\n  english: {\n    name: \"Name\",\n    secondName: \"Surname\",\n    title:\"Title\",\n    profile: \"Profile\",\n    experience: \"Experience\",\n    education: \"Education\",\n    skills: \"Skills\",\n    interests: \"Interests\",\n    contact: \"Contact\",\n  },\n};\n","const FormInput = (props) => {\n  const { name, description, prompt, onChangeInput, value } = props;\n  return (\n    <div className=\"form-input\">\n      <label htmlFor={name}>{description}</label>\n      <input\n        name={name}\n        type=\"text\"\n        placeholder={prompt}\n        value={value || \"\"}\n        onChange={onChangeInput}\n      ></input>\n    </div>\n  );\n};\n\nexport default FormInput;\n","import { buttons, educationSection } from \"../../helpers/languages\";\nimport FormInput from \"./FormInput\";\n\nconst EducationSection = (props) => {\n  const language = educationSection[props.language];\n  const buttonNames = buttons[props.language];\n\n  const educations = props.formData;\n  const onChangeInput = props.onChangeInput;\n\n  const onDeleteUnit = props.onDeleteUnit;\n  const onAddUnit = props.onAddUnit;\n\n  return (\n    <div id=\"education-data\" className=\"section\">\n      <h2>{language.education}</h2>\n      <button className=\"add-button\" onClick={onAddUnit}>\n        {buttonNames.addEducation}\n      </button>\n      {educations.map((education, i) => (\n        <div key={i} className=\"education section-unit\" data-index={i}>\n          <FormInput\n            name=\"facility\"\n            description={language.facility}\n            value={education.facility}\n            prompt={language.enterFacility}\n            onChangeInput={onChangeInput}\n          ></FormInput>\n          <FormInput\n            name=\"city\"\n            description={language.city}\n            value={education.city}\n            prompt={language.enterCity}\n            onChangeInput={onChangeInput}\n          ></FormInput>\n          <FormInput\n            name=\"degree\"\n            description={language.degree}\n            value={education.degree}\n            prompt={language.enterDegree}\n            onChangeInput={onChangeInput}\n          ></FormInput>\n          <FormInput\n            name=\"subject\"\n            description={language.subject}\n            value={education.subject}\n            prompt={language.enterSubject}\n            onChangeInput={onChangeInput}\n          ></FormInput>\n          <FormInput\n            name=\"fromWhen\"\n            description={language.fromWhen}\n            value={education.fromWhen}\n            prompt={language.enterFromWhen}\n            onChangeInput={onChangeInput}\n          ></FormInput>\n          <FormInput\n            name=\"toWhen\"\n            description={language.toWhen}\n            value={education.toWhen}\n            prompt={language.enterToWhen}\n            onChangeInput={onChangeInput}\n          ></FormInput>\n          <button className=\"delete-button\" onClick={onDeleteUnit}>\n            {buttonNames.deleteEducation}\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default EducationSection;\n","import { buttons, experienceSection } from \"../../helpers/languages\";\nimport FormInput from \"./FormInput\";\n\nconst ExperienceSection = (props) => {\n  const language = experienceSection[props.language];\n  const buttonNames = buttons[props.language];\n  const experiences = props.formData;\n  const onChangeInput = props.onChangeInput;\n  const onDeleteUnit = props.onDeleteUnit;\n  const onAddUnit = props.onAddUnit;\n\n  return (\n    <div id=\"experience-data\" className=\"experience section\">\n      <h2>{language.experience}</h2>\n      <button className=\"add-button\" onClick={onAddUnit}>\n        {buttonNames.addPosition}\n      </button>\n      {experiences.map((experience, i) => (\n        <div key={i} className=\"experience section-unit\" data-index={i}>\n          <FormInput\n            name=\"position\"\n            description={language.position}\n            value={experience.position}\n            prompt={language.enterPosition}\n            onChangeInput={onChangeInput}\n          ></FormInput>\n          <FormInput\n            name=\"company\"\n            description={language.company}\n            value={experience.company}\n            prompt={language.enterCompany}\n            onChangeInput={onChangeInput}\n          ></FormInput>\n          <FormInput\n            name=\"city\"\n            description={language.city}\n            value={experience.city}\n            prompt={language.enterCity}\n            onChangeInput={onChangeInput}\n          ></FormInput>\n          <FormInput\n            name=\"from\"\n            description={language.from}\n            value={experience.from}\n            prompt={language.from}\n            onChangeInput={onChangeInput}\n          ></FormInput>\n          <FormInput\n            name=\"to\"\n            description={language.to}\n            value={experience.to}\n            prompt={language.toWhen}\n            onChangeInput={onChangeInput}\n          ></FormInput>\n          <button className=\"delete-button\" onClick={onDeleteUnit}>\n            {buttonNames.deletePosition}\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ExperienceSection;","import { buttons, interestsSection } from \"../../helpers/languages\";\n\nconst InterestsSection=(props)=>{ \n    const language = interestsSection[props.language];\n    const buttonNames = buttons[props.language];\n\n    const interests = props.formData;\n    const onChangeInput = props.onChangeInput;\n\n    const onDeleteUnit = props.onDeleteUnit;\n    const onAddUnit = props.onAddUnit;\n\n    return (\n      <div id=\"interests-data\" className=\"interests-section section\">\n        <h2>{language.interests}</h2>\n        <button className=\"add-button\" onClick={onAddUnit}>{buttonNames.addInterest}</button>\n        {interests.map((interest,i) => (\n          <div  key={i} className=\"interest section-unit\" data-index={i}>\n            <input type=\"text\" name=\"interest-name\" placeholder={language.enterInterest} value={interest[\"interest-name\"] || \"\"} onChange={onChangeInput}></input>\n            <button className=\"delete-button\" onClick={onDeleteUnit}>{buttonNames.deleteInterest}</button>\n          </div>\n        ))}\n      </div>\n    ); \n}\n\nexport default InterestsSection;\n","import { personalSection } from \"../../helpers/languages\";\nimport FormInput from \"./FormInput\";\n\nconst PersonalDataSection = (props) => {\n\n    const language = personalSection[props.language];\n    const personalData = props.formData[0];\n    const onChangeInput = props.onChangeInput;\n    const onImageChange = props.onImageChange;\n\n    return (\n      <div id=\"personal-data\" className=\"personaldata section\">\n        <h3>{language.personalSection}</h3>\n        <div className=\"section-unit\" data-index=\"0\">\n          <FormInput\n            name=\"name\"\n            description={language.name}\n            value={personalData.name}\n            prompt={language.enterYourName}\n            onChangeInput={onChangeInput}\n          ></FormInput>\n          <FormInput\n            name=\"secondName\"\n            description={language.secondName}\n            value={personalData.secondName}\n            prompt={language.enterYourSecondName}\n            onChangeInput={onChangeInput}\n          ></FormInput>\n          <FormInput\n            name=\"title\"\n            description={language.title}\n            value={personalData.title}\n            prompt={language.enterYourTitle}\n            onChangeInput={onChangeInput}\n          ></FormInput>\n          <FormInput\n            name=\"address\"\n            description={language.address}\n            value={personalData.address}\n            prompt={language.enterYourAddress}\n            onChangeInput={onChangeInput}\n          ></FormInput>\n          <FormInput\n            name=\"phone\"\n            description={language.phone}\n            value={personalData.phone}\n            prompt={language.enterYourPhone}\n            onChangeInput={onChangeInput}\n          ></FormInput>\n          <FormInput\n            name=\"email\"\n            description={language.email}\n            value={personalData.email}\n            prompt={language.enterYourEmail}\n            onChangeInput={onChangeInput}\n          ></FormInput>\n          <FormInput\n            name=\"description\"\n            description={language.description}\n            value={personalData.description}\n            prompt={language.enterDescription}\n            onChangeInput={onChangeInput}\n          ></FormInput>\n          <div className=\"form-input\">\n            <label htmlFor=\"image\">{language.photo}</label>\n            <input name=\"image\" type=\"file\" onChange={onImageChange}></input>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nexport default PersonalDataSection;\n","import { buttons, skillsSection } from \"../../helpers/languages\";\n\nconst SkillsSection = (props)=> {\n    const language = skillsSection[props.language];\n    const buttonNames = buttons[props.language];\n\n    const skills = props.formData;\n    const onChangeInput = props.onChangeInput;\n\n    const onDeleteUnit = props.onDeleteUnit;\n    const onAddUnit = props.onAddUnit;\n\n    debugger;\n    return (\n      <div id=\"skills-data\" className=\"skills-section section\">\n        <h2>{language.skills}</h2>\n        <button className=\"add-button\" onClick={onAddUnit}>\n          {buttonNames.addSkill}\n        </button>\n        {skills.map((skill, i) => (\n          <div key={i} className=\"skill section-unit\" data-index={i}>\n            <input\n              type=\"text\"\n              name=\"skill-name\"\n              placeholder={language.enterSkill}\n              value={skill[\"skill-name\"] || \"\"}\n              onChange={onChangeInput}\n            ></input>\n            <button className=\"delete-button\" onClick={onDeleteUnit}>\n              {buttonNames.deleteSkill}\n            </button>\n          </div>\n        ))}\n      </div>\n    );\n}\n\nexport default SkillsSection;\n","import { buttons } from \"../helpers/languages\";\nimport EducationSection from \"./FormSections/EducationSection\";\nimport ExperienceSection from \"./FormSections/ExperienceSection\";\nimport InterestsSection from \"./FormSections/InterestsSection\";\nimport PersonalDataSection from \"./FormSections/PersonalDataSection\";\nimport SkillsSection from \"./FormSections/SkillsSection\";\n\nconst FilloutForm = (props) => {\n  const language = props.language;\n  const { data, handleChange, deleteUnit, addUnit, onImageChange } = props;\n\n  return (\n    <div className=\"form-area\">\n      <form id=\"fill-form\">\n        <h2 className=\"form-header\">{buttons[language].fillTheForm}</h2>\n        <PersonalDataSection\n          formData={data[\"personal-data\"]}\n          language={language}\n          onChangeInput={handleChange}\n          onImageChange={onImageChange}\n        ></PersonalDataSection>\n        <ExperienceSection\n          formData={data[\"experience-data\"]}\n          language={language}\n          onChangeInput={handleChange}\n          onDeleteUnit={deleteUnit}\n          onAddUnit={addUnit}\n        ></ExperienceSection>\n        <EducationSection\n          formData={data[\"education-data\"]}\n          language={language}\n          onChangeInput={handleChange}\n          onDeleteUnit={deleteUnit}\n          onAddUnit={addUnit}\n        ></EducationSection>\n        <SkillsSection\n          formData={data[\"skills-data\"]}\n          language={language}\n          onChangeInput={handleChange}\n          onDeleteUnit={deleteUnit}\n          onAddUnit={addUnit}\n        ></SkillsSection>\n        <InterestsSection\n          formData={data[\"interests-data\"]}\n          language={language}\n          onChangeInput={handleChange}\n          onDeleteUnit={deleteUnit}\n          onAddUnit={addUnit}\n        ></InterestsSection>\n      </form>\n    </div>\n  );\n};\n\nexport default FilloutForm;\n","import uniqid from \"uniqid\";\nimport { cvSections } from \"../helpers/languages\";\n\nconst CreatedCV = (props) => {\n  const language = cvSections[props.language];\n  const personalData = props.data[\"personal-data\"][0];\n  const experienceData = props.data[\"experience-data\"];\n  const educationData = props.data[\"education-data\"];\n  const skillsData = props.data[\"skills-data\"];\n  const interestData = props.data[\"interests-data\"];\n\n  return (\n    <div id=\"generated-cv\">\n      <div className=\"header\">\n        <div className=\"name\">\n          {personalData.name || language.name}{\" \"}\n          {personalData.secondName || language.secondName}\n        </div>\n        <div className=\"underline\"></div>\n        <div className=\"title\">{personalData.title || language.title}</div>\n      </div>\n      <div className=\"main-area\">\n        <div className=\"side-area\">\n          <div className=\"cv-section\">\n            <div className=\"cv-section-title\">{language.contact}</div>\n            <div className=\"cv-section-title-underline\"></div>\n            <div className=\"cv-section-data cv-contact-address\">\n              {personalData.address}\n            </div>\n            <div className=\"cv-section-data cv-contact-phone\">{personalData.phone}</div>\n            <div className=\"cv-section-data cv-contact-email\">{personalData.email}</div>\n          </div>\n        </div>\n        <div className=\"center-area\">\n          <div className=\"cv-section\">\n            <div className=\"cv-section-title\">{language.profile}</div>\n            <div className=\"cv-section-title-underline\"></div>\n            <div className=\"cv-section-data\">{personalData.description}</div>\n          </div>\n          {experienceData.length > 0 && (\n            <div className=\"cv-section\">\n              <div className=\"cv-section-title\">{language.experience}</div>\n              <div className=\"cv-section-title-underline\"></div>\n              <div className=\"cv-section-data\">\n                {experienceData.map((experience) => (\n                  <div key={uniqid()} className=\"cv-section-unit\">\n                    <div className=\"cv-experience-position\">\n                      {experience.position} / {experience.from}-{experience.to}\n                    </div>\n                    <div className=\"cv-experience-company\">\n                      {experience.company}, {experience.city}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          {educationData.length > 0 && (\n            <div className=\"cv-section\">\n              <div className=\"cv-section-title\">{language.education}</div>\n              <div className=\"cv-section-title-underline\"></div>\n              <div className=\"cv-section-data\">\n                {educationData.map((education) => (\n                  <div key={uniqid()} className=\"cv-section-unit\">\n                    <div className=\"cv-education-facility\">\n                      {education.facility}, {education.city} / {education.fromWhen}-\n                      {education.toWhen}\n                    </div>\n                    <div className=\"cv-education-degree\">Stopień: {education.degree}</div>\n                    <div className=\"cv-education-subject\">\n                      Przedmiot: {education.subject}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          {skillsData.length > 0 && (\n            <div className=\"cv-section\">\n              <div className=\"cv-section-title\">{language.skills}</div>\n              <div className=\"cv-section-title-underline\"></div>\n              <div className=\"cv-section-data\">\n                {skillsData.map((skill) => (\n                  <ul key={uniqid()} className=\"cv-section-unit\">\n                    <li>{skill[\"skill-name\"]}</li>\n                  </ul>\n                ))}\n              </div>\n            </div>\n          )}\n          {interestData.length > 0 && (\n            <div className=\"cv-section\">\n              <div className=\"cv-section-title\">{language.interests}</div>\n              <div className=\"cv-section-title-underline\"></div>\n              <div className=\"cv-section-data\">\n                {interestData.map((interest) => (\n                  <ul key={uniqid()} className=\"cv-section-unit\">\n                    <li>{interest[\"interest-name\"]}</li>\n                  </ul>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreatedCV;\n","import { buttons } from \"../helpers/languages\";\n\nconst ControlButtons = (props) => {\n  const language = buttons[props.language];\n  const clearAllFields = props.clearAllFields;\n  const loadExample = props.loadExample;\n\n  return (\n    <div className=\"buttons-area\">\n      <button className=\"load-example\" onClick={loadExample}>\n        {language.loadExample}\n      </button>\n      <button className=\"clear-all\" onClick={clearAllFields}>\n        {language.clearAll}\n      </button>\n    </div>\n  );\n};\n\nexport default ControlButtons;\n","export const exampledata = {\n  \"personal-data\": [\n    {\n      name: \"Phillip J.\",\n      secondName: \"Fry\",\n      title: \"Delivery Boy\",\n      address: \"New York\",\n      phone: \"123 456 789\",\n      email: \"planetexpress@gmail.com\",\n      description:\n        \"I am a delivery boy in the distant future. I'm looking for any job that would help out my career.\",\n    },\n  ],\n  \"experience-data\": [\n    {\n      position: \"Delivery Boy\",\n      company: \"Planet Express\",\n      city: \"New York\",\n      from: \"4034\",\n      to: \"present\",\n    },\n  ],\n  \"education-data\": [\n    {\n      facility: \"State High School\",\n      city: \"New York\",\n      degree: \"-\",\n      subject: \"-\",\n      fromWhen: \"1998\",\n      toWhen: \"2001\",\n    },\n  ],\n  \"skills-data\": [\n    { \"skill-name\": \"Delivering\" },\n    { key: \"kt1kfjdi\", \"skill-name\": \"Juggling\" },\n  ],\n  \"interests-data\": [\n    { \"interest-name\": \"Being lazy\" },\n    { key: \"kt1kgp0t\", \"interest-name\": \"Coffe\" },\n  ],\n};\n","import ReactToPrint, { PrintContextConsumer } from \"react-to-print\";\nimport React, { useState } from \"react\";\nimport FilloutForm from \"./components/FilloutForm\";\nimport CreatedCV from \"./components/CreatedCv\";\nimport ControlButtons from \"./components/ControlButtons\";\nimport { exampledata } from \"./helpers/exampledata\";\nimport { buttons } from \"./helpers/languages\";\nimport uniqid from \"uniqid\";\nimport \"./styles/style.css\";\n\nconst App = (props) => {\n  const [image, setImage] = useState({});\n  const [language, setLanguage] = useState(\"polish\");\n  const [data, setData] = useState({\n    \"personal-data\": [{}],\n    \"experience-data\": [{}],\n    \"education-data\": [{}],\n    \"skills-data\": [{}],\n    \"interests-data\": [{}],\n  });\n\n  const changeLanguage = (event) => {\n    event.preventDefault();\n    setLanguage(event.target.dataset.language);\n  };\n\n  const clearAllFields = () => {\n    setData({\n      \"personal-data\": [{}],\n      \"experience-data\": [{}],\n      \"education-data\": [{}],\n      \"skills-data\": [{}],\n      \"interests-data\": [{}],\n    });\n  };\n\n  const loadExample = () => {\n    setData(exampledata);\n  };\n\n  const handleImageChange = async (event) => {\n    await setImage(event.target.files[0]);\n    if (image === undefined) {\n      document.querySelector(\".image-preview\").remove();\n    } else {\n      const fr = new FileReader();\n      fr.readAsDataURL(image);\n      fr.onload = function (e) {\n        let sideArea = document.querySelector(\".side-area\");\n        let imgElem;\n        if (document.querySelector(\".image-preview\") === null) {\n          imgElem = document.createElement(\"img\");\n        } else {\n          imgElem = document.querySelector(\".image-preview\");\n        }\n\n        imgElem.classList.add(\"image-preview\");\n        imgElem.src = this.result;\n        sideArea.prepend(imgElem);\n      };\n    }\n  };\n\n  const handleChange = (event) => {\n    let name = event.target.name;\n    let value = event.target.value;\n    let sectionName = event.target.closest(\".section\").id;\n    let index = event.target.closest(\".section-unit\").dataset.index;\n\n    const copiedObj = JSON.parse(JSON.stringify(data[sectionName]));\n\n    if (copiedObj[index] === undefined) {\n      copiedObj.push({});\n    }\n    copiedObj[index][name] = value;\n\n    setData({\n      ...data,\n      [sectionName]: copiedObj,\n    });\n  };\n\n  const deleteUnit = (event) => {\n    event.preventDefault();\n    let sectionName = event.target.closest(\".section\").id;\n    let unitIndex = event.target.closest(\".section-unit\").dataset.index;\n\n    const copiedObj = JSON.parse(JSON.stringify(data[sectionName]));\n\n    if (copiedObj[unitIndex] !== undefined) {\n      copiedObj.splice(unitIndex, 1);\n    }\n\n    setData({\n      ...data,\n      [sectionName]: copiedObj,\n    });\n  };\n\n  const addUnit = (event) => {\n    event.preventDefault();\n    let sectionName = event.target.closest(\".section\").id;\n\n    const copiedObj = JSON.parse(JSON.stringify(data[sectionName]));\n\n    copiedObj.push({ key: uniqid() });\n\n    setData({\n      ...data,\n      [sectionName]: copiedObj,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"change-lang\">\n        <button\n          className=\"lang-button lang-pol\"\n          data-language=\"polish\"\n          onClick={changeLanguage}\n        ></button>\n        <button\n          className=\"lang-button lang-eng\"\n          data-language=\"english\"\n          onClick={changeLanguage}\n        ></button>\n      </div>\n      <FilloutForm\n        language={language}\n        data={data}\n        handleChange={handleChange}\n        addUnit={addUnit}\n        deleteUnit={deleteUnit}\n        onImageChange={handleImageChange}\n      ></FilloutForm>\n      <ReactToPrint content={() => this.componentRef}>\n        <PrintContextConsumer>\n          {({ handlePrint }) => (\n            <button className=\"generate-pdf\" onClick={handlePrint}>\n              {buttons[language].generatePDF}\n            </button>\n          )}\n        </PrintContextConsumer>\n      </ReactToPrint>\n      <ControlButtons\n        loadExample={loadExample}\n        language={language}\n        data={data}\n        clearAllFields={clearAllFields}\n      ></ControlButtons>\n      <div className=\"cv-area\">\n        <CreatedCV\n          language={language}\n          ref={(el) => (this.componentRef = el)}\n          image={image}\n          data={data}\n        ></CreatedCV>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}